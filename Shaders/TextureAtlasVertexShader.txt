#version 330 core

layout(location = 0) in vec3 vertices;
layout(location = 1) in vec4 xyzs; // Position of the centre of the particle and size of the square
layout(location = 2) in vec4 colour;

out vec2 UV;
out vec4 particleColour;

uniform vec3 cameraRight;
uniform vec3 cameraUp;
uniform mat4 viewProjectionMatrix;
uniform mat4 orientation;
uniform float numOfRows;
uniform vec2 offset;

void main() {
	
	float particleSize = xyzs.w;
	
	vec3 particleCentre = xyzs.xyz;
	
	vec3 vertexPosition = particleCentre + cameraRight * vertices.x * particleSize + cameraUp * vertices.y * particleSize;

	gl_Position = viewProjectionMatrix * orientation * vec4(vertexPosition, 1.0f);

	UV = (vertices.xy + vec2(0.5, 0.5));

	UV = vec2 (UV.s / numOfRows + offset.s, UV.t / numOfRows + offset.t);
	
	particleColour.a = colour.a;
}
